os.loadAPI("/scripts/apis/backtrack")

function digAndMove(direction)
  local actions = {
    ["forward"] = function()
      turtle.dig()
      turtle.digUp()
      backtrack.forward()
    end,
    ["up"] = function()
      turtle.digUp()
      backtrack.up()
    end,
    ["down"] = function()
      turtle.digDown()
      backtrack.down()
    end
  }

  local result = actions[direction]()

  return result
end

local tArgs = {...}

if #tArgs ~= 2 or tonumber(tArgs[2]) == nil or math.floor(tonumber(tArgs[2])) ~= tonumber(tArgs[2]) or tonumber(tArgs[2]) < 1 then
  print("Usage: dig <dir> <steps>")
  print("Digs a hole in the direction specified and returns.")
  print("<dir> should be forward, up, down")
  print("Place a torch from slot 1 every 5 blocks")
  return
end

local direction = tArgs[1]
local length = tonumber(tArgs[2])

local blocksMovedForward = 0

while blocksMovedForward < length do
  if blocksMovedForward % 5 == 0 then
    print("Laying torch from slot 1")
    turtle.select(1)
    turtle.place()
  end
  print("Moving " .. tostring(blocksMovedForward) .. "/" .. length)
  digAndMove(direction)
  blocksMovedForward = blocksMovedForward + 1
  sleep(1)
end

backtrack.home()
